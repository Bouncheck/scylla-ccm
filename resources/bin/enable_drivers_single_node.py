#!/usr/bin/env python

from cassandra.cluster import Cluster,Session
import weakref
from weakref import WeakValueDictionary
try:
    from weakref import WeakSet
except ImportError:
    from cassandra.util import WeakSet  # NOQA
import argparse
import logging

class SimpleCluster(Cluster):
    def simple_connect(self, ip):
        self.connection_class.initialize_reactor()
        connection = self.connection_factory(ip, is_control_connection=False)
        self.add_host(ip, 'dc1', 'rack1', False, False)
        self.load_balancing_policy.populate(
        weakref.proxy(self), self.metadata.all_hosts())
        session = Session(self, self.metadata.all_hosts())
        self.sessions.add(session)
        return session

parser = argparse.ArgumentParser(description="Enable single node drivers")
parser.add_argument('ip', nargs='?',default='127.0.0.1', help="ip address of node")
args = parser.parse_args()

#log = logging.getLogger()
#log.setLevel('DEBUG')
#fh = logging.FileHandler('mypyclient.log')
#fh.setLevel('DEBUG')
#ch = logging.StreamHandler()
#ch.setLevel('DEBUG')
#log.addHandler(fh)
#log.addHandler(ch)


scluster = SimpleCluster();
session = scluster.simple_connect(args.ip);
session.set_keyspace('system');
session.execute("insert into system.local (key,bootstrapped,gossip_generation,host_id,tokens) values (\'local\',\'COMPLETED\',1,uuid(),{'-1087089824277849565','-1203167679842422008','-1249059624198114008','-1285552589101344033','-1451616909040446912','-1514590818764967811','-1541932874500938006','-1548736971012646665','-1549377038394459602','-1650687518904111328','-167855445863056320','-1711005961880345332','-175309786449758793','-1766626853760876147','-1806928295084699860','-1895002133306119219','-1906778167574140749','-1909495025967402753','-1970176467853344660','-2071538998783316912','-2243524948937051302','-2352400907921137239','-2382257716355134273','-2436769721270533151','-2529212978557076620','-2600078866488168990','-2631089143780088258','-267353839685934185','-282339042456413467','-2885816380502006794','-2999850954659465090','-300948923555681692','-3069209144354300010','-307231959391761285','-3094542623415210368','-3128016208378535294','-3311483491108484891','-3391715031818188090','-3707732300053268548','-3827725802026953527','-3839006840781049559','-3911408364261019581','-4007742898078482580','-4016029386478156396','-4034485638915475026','-4212879639671626332','-4239766175422982832','-4310766730859560767','-4311726218862532699','-4323953416292386688','-4329362660834668532','-4355745727673855020','-4502797831069910612','-4513174312805727546','-4518096152918818983','-4669867788654241849','-4758513906764321073','-4964664397499527867','-5057458493722403246','-5189162163267392602','-5219468559410482217','-5261345383621005723','-5291236401222732888','-5322211903535479477','-5405422277977722204','-5453965983377662538','-5594872558437293553','-562665958103727944','-5686762884497452174','-5759893820753837480','-5934425055640488829','-5950840957061174051','-6046671398369323413','-6063349209897929024','-6069758199296392221','-6204576284289091854','-6274854229185601968','-631818704498979846','-6326744408436933563','-6590046907618614175','-6629952416764461399','-6630611905188009499','-6678331366316254732','-6836823371082248138','-6899060668381817003','-6975069802908580665','-7021586693672749966','-7071314296536916894','-7169999367537125948','-7203465615168684028','-7324823008250026405','-7475561139106885354','-749994025224722203','-751209221570419604','-7558333917325101290','-7670782481614363613','-7679335003408366619','-7713223935306800523','-7738225096787316733','-7764209918912579981','-7852398852857073215','-7878907044333018016','-793516525150677123','-7975477786825797559','-8209542415258820933','-8257377029747121974','-8285599436538973657','-8303271479132685928','-8405018570822377090','-8433837313772613753','-8446822079651860673','-8450119353893450870','-8545779196941383705','-8608150126711853165','-8613673753836253526','-8703853073785993345','-8793009480599550367','-8916208209211625728','-8961246730870043706','-8962402487360416808','-8990119943633053179','-8997960717180013704','-9080810999241801821','-9105814711833926623','101669064108834862','1063311502942302404','1087620478250315844','1122026971692888377','115684971834823599','1170403901849350582','1313899591919566437','1379283188001009208','1400375414058711571','1405616530811392275','1424201054948927460','1477031342284298568','150456471917061429','1507009914808170989','1728093563497839283','1763193529206666078','1813542504452686820','1947647729311754899','195510917322551491','2078185738958849240','209157322971330879','222423029091530709','224575897619283721','2425453934584052409','2467025923277824559','2484722632787493725','252245225812742676','2559745789141772272','2566955109716873116','2623938751826422816','2768995978273059293','2841845886513040211','293070038704604971','2936799940877450230','2962742422015057022','2994196095866629120','3086632386439071688','3103260626412969546','3106229961066914092','3203460851701720824','3281958085588439366','3346586810068763663','3404183238974436431','3443136560137212005','345942596299211657','352689993495484497','3644891374479603648','3655809622971980815','3704982817839921065','37212798370274021','3760003282005242038','3760411115301050511','3911247222331877443','3914428545451746326','4093254640897252868','4218490673663563506','4260905408772315802','4345435855508238274','4387575296324309845','4624326824052733061','4628349123072333824','4631050290157061098','4669406909813043497','4760760547585398367','4799549025121304445','4801741934314680144','4808536594361983786','4988031985586825120','5044206648160481646','506604139011248451','5092289677246539958','5389458186117019960','5478494313807699572','5503149933716474309','5559910108580827986','5582528607233509950','5610939269491721453','5647026625440595565','5717618463555744604','5751462074386647402','5766521146138005887','5849096342658314166','5897876242859701311','593402933026977462','5964878739278037485','6001615066705248835','6193804822931020723','6235405401286677848','6395389479480298486','6457905073325574916','6562985905966599777','6673154558037029493','6684229043127992513','6704408032973782002','6808682663744136573','6818758412325303462','6929754308313963246','693134269398746917','6954462220893166100','7048503504407051460','7049798266937334368','7077507227834716540','7126930945427766912','7219334485563641773','7278316672259180479','7328944564564101064','7516042040017923805','7557612004975530107','7589178778882249033','7740041150162209986','7890181666717276440','7890704053505420558','7909126573969154630','7938827608750537986','7954656735296558881','7976842657644106335','7988600174261731976','7996816005739546112','8046680846931225451','8060289977396665146','8264539471003056452','835165431732345254','8623917230168869300','8721952097947965847','8742291214769409228','890787510828944725','8938588152688500632','8984434931134646897','9005095007109991449','9131483633522704961','9142227264773192058','916644424469820208'});");

cluster = Cluster([args.ip])
session2 = cluster.connect();
#rows = session2.execute("select key, rack from system.local");
#for e in rows:
#    print e.key, e.rack; 
